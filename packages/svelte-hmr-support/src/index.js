export function registerHotModuleReloader(pdf) {
    // save the current pdf document to somewhere global
    // so that the hmr callback always access the last pdf document
    // as it might happen that the whole page is regenerated by hmr
    window.__PDFSVEX_HMR_PDF = pdf;

    // if we do not have created our hook jet, create it
    if (window.__SVELTE_HMR && !window.__PDFSVEX_HMR_HOOK) {
        // create the svelte hmr hook
        // Important this uses an internal svelte-hmr hook, so this might break at any time
        // repo: https://github.com/rixo/svelte-hmr
        // exact lines: https://github.com/rixo/svelte-hmr/blob/866e9a7a37e4c7926e43080b533c83cedffd2296/runtime/proxy.js#L277-L302 (may change with newer commits)
        window.__SVELTE_HMR.on('afterupdate', () => {
            // save the last scroll position
            const scrollX = window.scrollX;
            const scrollY = window.scrollY;

            // take the latest pdf, and regenerate the pages for it
            window.__PDFSVEX_HMR_PDF.pageNow();

            // scroll to the last scroll position
            window.scrollTo(scrollX, scrollY);
        });

        // save that the hook was already created
        window.__PDFSVEX_HMR_HOOK = {};

        // write some log into the developer console to notify developers
        console.log('@pdfsvex/svelte-hmr-support: registered svelte-hmr hook');
    }
}
